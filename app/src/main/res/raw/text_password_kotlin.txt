// Import the necessary classes and libraries
import android.annotation.SuppressLint
import android.content.Intent
import android.os.Bundle
import android.text.method.HideReturnsTransformationMethod
import android.text.method.PasswordTransformationMethod
import android.view.View
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

// This class extends AppCompatActivity and represents the main activity of an Android app
class MainActivity : AppCompatActivity() {

    // Declare a private lateinit variable for binding the layout with this activity
    private lateinit var binding: ActivityMainBinding

    // This method is called when the activity is first created
    @SuppressLint("SetTextI18n")
    override fun onCreate(savedInstanceState: Bundle?) {
        // Call super.onCreate to complete the creation of activity
        super.onCreate(savedInstanceState)

        // Inflate the layout and set it as the content view for this activity
        binding = ActivityMainBinding.inflate(layoutInflater)

        // Set the content view to the root view of the inflated layout
        setContentView(binding.root)

        // Set icon resource for showPasswordButton using setIconResource method
        binding.showPasswordButton.setIconResource(R.drawable.ic_visible)

        // Add onClickListener to showPasswordButton
        binding.showPasswordButton.setOnClickListener {
            if (binding.showPasswordButton.text.toString() == "Show") { // If text of showPasswordButton is "Show"
                // Set transformation method of editText to HideReturnsTransformationMethod instance
                binding.editText.transformationMethod = HideReturnsTransformationMethod.getInstance()

                // Set icon resource of showPasswordButton to ic_visible_off drawable resource
                binding.showPasswordButton.setIconResource(R.drawable.ic_visible_off)

                // Set text of showPasswordButton to "Hide"
                binding.showPasswordButton.text = "Hide"
            } else { // If text of showPasswordButton is not "Show"
                // Set transformation method of editText to PasswordTransformationMethod instance
                binding.editText.transformationMethod = PasswordTransformationMethod.getInstance()

                // Set icon resource of showPasswordButton to ic_visible drawable resource
                binding.showPasswordButton.setIconResource(R.drawable.ic_visible)

                // Set text of showPasswordButton to "Show"
                binding.showPasswordButton.text = "Show"
            }
        }

        addKeyListener()
    }

    private fun addKeyListener() {
        val edittext = findViewById<View>(R.id.editText) as EditText

        binding.buttonPrintEdit.setOnClickListener {
            Toast.makeText(this, edittext.text, Toast.LENGTH_LONG).show()
        }
    }
}