// Import the necessary classes and libraries
import android.app.TimePickerDialog
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import java.text.SimpleDateFormat
import java.util.Calendar
import java.util.Locale

// This class extends AppCompatActivity and represents the main activity of an Android app
class MainActivity : AppCompatActivity() {

    // Declare a private lateinit variable for binding the layout with this activity
    private lateinit var binding : ActivityMainBinding

    // Declare a private val variable for calendar instance
    private val calendar: Calendar = Calendar.getInstance()

    // This method is called when the activity is first created
    override fun onCreate(savedInstanceState: Bundle?) {
        // Call super.onCreate to complete the creation of activity
        super.onCreate(savedInstanceState)

        // Inflate the layout and set it as the content view for this activity
        binding = ActivityMainBinding.inflate(layoutInflater)

        // Set the content view to the root view of the inflated layout
        setContentView(binding.root)

        // Create a SimpleDateFormat object with desired time format and locale
        val simpleDateFormat = SimpleDateFormat("HH:mm", Locale.getDefault())

        // Format current time using simpleDateFormat object and assign it to dateTime variable
        val dateTime = simpleDateFormat.format(calendar.time)

        // Set text of timeTextView in layout to dateTime value
        binding.timeTextView.text = dateTime

        // Set an onClickListener for changeTimeButton in layout
        binding.changeTimeButton.setOnClickListener {
            // Create an OnTimeSetListener object for TimePickerDialog
            val timeSetListener = TimePickerDialog.OnTimeSetListener { _, hour, minute ->
                // Update calendar instance with selected hour and minute values
                calendar.set(Calendar.HOUR_OF_DAY, hour)
                calendar.set(Calendar.MINUTE, minute)

                // Format selected time value using SimpleDateFormat object and set text of timeTextView in layout to formatted value
                binding.timeTextView.text = SimpleDateFormat("HH:mm", Locale.getDefault()).format(calendar.time)
            }

            // Show TimePickerDialog when changeTimeButton is clicked with current hour and minute values from calendar instance as default values
            TimePickerDialog(this, timeSetListener,
                calendar.get(Calendar.HOUR_OF_DAY),
                calendar.get(Calendar.MINUTE), true).show()

                }
    }
}