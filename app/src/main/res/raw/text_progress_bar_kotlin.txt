// Import the necessary classes and libraries
import android.content.Intent
import android.os.Bundle
import android.os.Handler
import androidx.appcompat.app.AppCompatActivity

// This class extends AppCompatActivity and represents the main activity of an Android app
class MainActivity : AppCompatActivity() {

    // Declare a private lateinit variable for binding the layout with this activity
    private lateinit var binding: ActivityProgressBarBinding

    // Handler to manage UI updates
    @Suppress("DEPRECATION")
    private val handler = Handler()

    // This method is called when the activity is first created
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Inflate the layout and set it as the content view for this activity
        binding = ActivityProgressBarBinding.inflate(layoutInflater)

        // Set the content view to the root view of the inflated layout
        setContentView(binding.root)

        // Hide the progress bar initially
        binding.progressBar.hide()

        // Button click listener for horizontal progress bar download
        binding.buttonDownloadHorizontal.setOnClickListener {
            var progressStatus = 0
            Thread {
                while (progressStatus < 100) {

                    // Increment the progress status
                    progressStatus += 1
                    try {

                        // Pause the thread for a short duration
                        Thread.sleep(50)
                    } catch (e: InterruptedException) {
                        e.printStackTrace()
                    }

                   // Update the horizontal progress bar on the main thread
                    handler.post {
                        binding.progressBarHorizontal.progress = progressStatus
                    }
                }
            }.start() // Start the background thread
        }

        // Button click listener for simulated download with delay
        binding.buttonDownload.setOnClickListener {
            binding.progressBar.show() // Show the progress bar

            // Simulate download completion after 5 seconds
            handler.postDelayed({
                binding.progressBar.hide() // Hide the progress bar after the delay
            }, 5000)
        }
    }
}